import { Certificate } from "@ndn/keychain";
import { Data, Verifier } from "@ndn/packet";
import { Decoder } from "@ndn/tlv";
import { TrustSchema, TrustSchemaVerifier } from "@ndn/trust-schema";
import { fromHex } from "@ndn/util";

import { policy } from "./trust-policy";

// curl -sfLS https://named-data.net/ndnsec/ndn-testbed-root-x3.ndncert | xxd -p
const NDN_TESTBED_ROOT_X3_HEX = `
06fd0149072408036e646e08034b45590808ecf14c8e512315e008036e64
6e0809fd00000175e67f3210140918010219040036ee80155b3059301306
072a8648ce3d020106082a8648ce3d030107034200041b1fb763816f628d
5e49c22f803ef8950850773378cead36d5da29f2dee419f1297c674a7f61
c6a679f8feaa05f62275c94644ffb35af33ccee314fa46920cd116701b01
031c16071408036e646e08034b45590808ecf14c8e512315e0fd00fd26fd
00fe0f323032303131323054313633313337fd00ff0f3230323431323331
54323335393539fd010227fd020023fd02010866756c6c6e616d65fd0202
134e444e205465737462656420526f6f7420583317473045022100fc86bb
53ea862f4d722da5fcb834883702b078b7675086029c85e6b3a8280ada02
2053c0b1766141760e6596ba1e40712d9cf6b6a8770ea88b919a18e250d8
09c5a9`;

// ndnsec_in keychain/root cert-dump -i /yoursunny | base64 -d | xxd -p
const YOURSUNNY_ROOT_1618190329576_HEX = `
06fd0129072a0809796f757273756e6e7908034b455908087319cd8d937b
5ba6080473656c66230800000178c3a8e6e8140918010219040036ee8015
5b3059301306072a8648ce3d020106082a8648ce3d030107034200046af1
9567f65ec0dda977ec53f7e47e2a1dfb77983b4f1e7814a17a150f2ec751
813573c25e6be4a1740e55a57195b001d2d72a4a8f5e42e9e395b1cf640b
f051164b1b01031c1c071a0809796f757273756e6e7908034b4559080873
19cd8d937b5ba6fd00fd26fd00fe0f313937303031303154303030303030
fd00ff0f32303431303430375430313138343917463044022029f81a3b64
6fedcb375656af4e90bceb26379f0eadf2ae428930c3a3677e759502205c
5fad1f9906e1c34b4357d3c50c6c6414abfaca3b3804a54e05f48c51091d
5d`;

// ndnpeek, retrieved on 2021-12-30
const PCNL_ROOT_20211230_HEX = `
06fd013a0732080470636e6c080b6e646e2d7465737462656408034b4559
08084ff99e35dd26ff5f080473656c6636080000017dfb182aa414091801
0219040036ee80155b3059301306072a8648ce3d020106082a8648ce3d03
010703420004912170fba5210b8c4ed2a2ffa024637649e896ed25b51bc0
23bb79c245c8b3a032f65443dc44e5534734539a9f4475d997c293f2aef6
d402a6f0eefc37015a0b16531b01031c240722080470636e6c080b6e646e
2d7465737462656408034b455908084ff99e35dd26ff5ffd00fd26fd00fe
0f313937303031303154303030303030fd00ff0f32303431313232325430
383533323417473045022100be7689fa22338ca1d1fd26f70ffcc3442abc
ee44cd6f7d8caf2e564c3469db4502205f3fd535e325aa72c9f9fa102e22
5c1e072ca4696d7ed99294c806e9b0f4daef`;

function importRootCert(hex: string): Certificate {
  const data = new Decoder(fromHex(hex.replace(/\s+/g, ""))).decode(Data);
  return Certificate.fromData(data);
}

const trustAnchors = [
  NDN_TESTBED_ROOT_X3_HEX,
  YOURSUNNY_ROOT_1618190329576_HEX,
  PCNL_ROOT_20211230_HEX,
].map(importRootCert);
const schema = new TrustSchema(policy, trustAnchors);
export const verifier: Verifier = new TrustSchemaVerifier({ schema });
